import pyaudio
import numpy as np
import librosa
import tensorflow as tf


# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• Autopitch ‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
model = tf.keras.models.load_model("MelNoteClassifier.h5")  # ‡πÉ‡∏™‡πà path ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏¢

def predict_note():
    """‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡∏Ñ‡πå -> ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô MFCC -> ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏ô‡πâ‡∏ï"""
    mfcc_input = pyaudio.get_mfcc_from_audio().reshape(1, -1)  # Reshape ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö Input ‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•
    predicted_note = model.predict(mfcc_input)
    
    # ‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏ô‡πâ‡∏ï‡∏î‡∏ô‡∏ï‡∏£‡∏µ (‡πÄ‡∏ä‡πà‡∏ô C, D, E, F, G, A, B)
    note_labels = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"]
    predicted_label = note_labels[np.argmax(predicted_note)]
    
    return predicted_label

# ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÇ‡∏ô‡πâ‡∏ï
predicted = predict_note()
print("üéµ Predicted Note:", predicted)